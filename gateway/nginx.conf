http {
    upstream frontend {
        server frontend:3005;
    }

    upstream userservice {
        server user-service:3002;
    }

    upstream authservice {
        server auth-service:3004;
    }

    upstream questionservice {
        server question-service:3001;
    }

    upstream collaborationservice{
        server collaboration-service:8001;
    }

    upstream communicationservice {
        server communication-service:8002;
    }

    upstream matchingservice {
        server matching-service:8004;
    }
    
    upstream historyservice {
        server history-service:8003;
    }

    server {
        listen 3000; 
        server_name localhost;
        root /proxy;
        
        # Setup Question-Scraper 
        location /question_scraper {
            rewrite ^/question_scraper(.*)$ $1 break;
            proxy_pass http://questionservice;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Conenction 'upgrade';
            proxy_set_header Host $host;proxy_cache_bypass $http_upgrade;
            proxy_pass_request_headers on;
        }

        location / {
            auth_request /auth_service/apiauth;

            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Conenction 'upgrade';
            proxy_set_header Host $host;proxy_cache_bypass $http_upgrade;
            proxy_pass_request_headers on;

            proxy_intercept_errors on;
            error_page 401 = /signin;
        }
        location /_next {
            proxy_pass http://frontend/_next;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Conenction 'upgrade';
            proxy_set_header Host $host;proxy_cache_bypass $http_upgrade;
            proxy_pass_request_headers on;
        }
        location /_next/webpack-hmr {
            proxy_pass http://frontend/_next/webpack-hmr;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        location /signup {
            proxy_pass http://frontend/signup;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Conenction 'upgrade';
            proxy_set_header Host $host;proxy_cache_bypass $http_upgrade;
            proxy_pass_request_headers on;
        }
        location /signin {
            proxy_pass http://frontend/signin;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Conenction 'upgrade';
            proxy_set_header Host $host;proxy_cache_bypass $http_upgrade;
            proxy_pass_request_headers on;
        }
        location /user_service {
            auth_request /auth_service/apiauth;
            
            rewrite ^/user_service(.*)$ $1 break;
            proxy_pass http://userservice;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Conenction 'upgrade';
            proxy_set_header Host $host;proxy_cache_bypass $http_upgrade;
            proxy_pass_request_headers on;
        }

        location /user_service/auth {
            internal;
        }

        location /user_service/admin {
            auth_request /auth_service/apiauth/validate-admin;
            
            rewrite ^/user_service(.*)$ $1 break;
            proxy_pass http://userservice;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Conenction 'upgrade';
            proxy_set_header Host $host;proxy_cache_bypass $http_upgrade;
            proxy_pass_request_headers on;
        }

        location /auth_service {
            rewrite ^/auth_service(.*)$ $1 break;
            proxy_pass http://authservice;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Conenction 'upgrade';
            proxy_set_header Host $host;proxy_cache_bypass $http_upgrade;
            proxy_pass_request_headers on;
        }

        location /question_service {
            auth_request /auth_service/apiauth;

            rewrite ^/question_service(.*)$ $1 break;
            proxy_pass http://questionservice;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Conenction 'upgrade';
            proxy_set_header Host $host;proxy_cache_bypass $http_upgrade;
            proxy_pass_request_headers on;
        }

        location /question_service/admin {
            auth_request /auth_service/apiauth/validate-admin;

            rewrite ^/question_service(.*)$ $1 break;
            proxy_pass http://questionservice;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Conenction 'upgrade';
            proxy_set_header Host $host;proxy_cache_bypass $http_upgrade;
            proxy_pass_request_headers on;

        }

        location /collaboration_service {
            auth_request /auth_service/apiauth;

            rewrite ^/collaboration_service(.*)$ $1 break;
            proxy_pass http://collaborationservice;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Conenction 'upgrade';
            proxy_set_header Host $host;proxy_cache_bypass $http_upgrade;
            proxy_pass_request_headers on;
        }

        location /communication_service {
            auth_request /auth_service/apiauth;

            rewrite ^/communication_service(.*)$ $1 break;
            proxy_pass http://communicationservice;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Conenction 'upgrade';
            proxy_set_header Host $host;proxy_cache_bypass $http_upgrade;
            proxy_pass_request_headers on;
        }

        location /matching_service {
            auth_request /auth_service/apiauth;

            rewrite ^/matching_service(.*)$ $1 break;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_pass http://matchingservice;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Conenction 'upgrade';
            proxy_set_header Host $host;proxy_cache_bypass $http_upgrade;
            proxy_pass_request_headers on;
        }

        location /history_service {
            auth_request /auth_service/apiauth;

            rewrite ^/history_service(.*)$ $1 break;
            proxy_pass http://historyservice;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Conenction 'upgrade';
            proxy_set_header Host $host;proxy_cache_bypass $http_upgrade;
            proxy_pass_request_headers on;
        }


        location /auth_service/apiauth {
            internal;
            proxy_pass http://authservice/apiauth/validate-user;
            
            proxy_pass_request_body  off;
            proxy_set_header Content-Length "";
            proxy_set_header Authorization $http_authorization;
            proxy_pass_header Authorization;

            proxy_set_header X-Original_URI $request_uri;
            proxy_set_header X-Original-Remote-Addr $remote_addr;
            proxy_set_header X-Original-Host $host; 
            
        }

        location /auth_service/apiauth/validate-admin {
            internal;
            proxy_pass http://authservice/apiauth/validate-admin;
            
            proxy_pass_request_body  off;
            proxy_set_header Content-Length "";
            proxy_set_header Authorization $http_authorization;
            proxy_pass_header Authorization;

            proxy_set_header X-Original_URI $request_uri;
            proxy_set_header X-Original-Remote-Addr $remote_addr;
            proxy_set_header X-Original-Host $host; 
            
        }

    }
}

events {}
